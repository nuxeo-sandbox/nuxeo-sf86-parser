<component
	name="org.nuxeo.ecm.platform.importer.xml.parser.XMLImporterComponent.sf86.contrib"
	version="1.0">
	<require>org.nuxeo.ecm.platform.importer.xml.parser.XMLImporterComponent
	</require>
	<extension
		target="org.nuxeo.ecm.platform.importer.xml.parser.XMLImporterComponent"
		point="documentMapping">
		<!-- Create Application based on SF86 contents -->
		<docConfig tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/IdentifyingInformation">
			<docType>Application</docType>
			<name>Application</name>
			<parent><![CDATA[ #{
			org.dom4j.Node node = xml.selectSingleNode('//XMP/Request/Applicant/SSN');
			org.nuxeo.ecm.core.api.DocumentModelList dml = session
                .query(String.format("select * from Document where ecm:primaryType = 'Case' and case:SSN = '%s'", node.getText()));       
            return dml.get(0).getPathAsString();
    }]]></parent>
			<!--<postCreationAutomationChain>Post_SF86Import</postCreationAutomationChain> -->
		</docConfig>
		<!-- Attach associated documents -->
		<docConfig tagName="//XMP/Request/Attachments/Attachment">
			<docType>File</docType>
			<name>@OriginalLocalFileName</name>
			<parent><![CDATA[ #{
			org.dom4j.Node node = xml.selectSingleNode('//XMP/Request/Applicant/SSN');
			org.nuxeo.ecm.core.api.DocumentModelList dml = session
                .query(String.format("select * from Document where ecm:primaryType = 'Case' and case:SSN = '%s'", node.getText()));
            return dml.get(0).getPathAsString();
    }]]></parent>
		</docConfig>
		<!-- Create interviews for personal references -->
		<docConfig
			tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/PersonalReferences/References/Reference">
			<docType>Interview</docType>
			<!-- Externally assigned naming -->
			<parent><![CDATA[ #{
			org.dom4j.Node node = xml.selectSingleNode('//XMP/Request/Applicant/SSN');
			org.nuxeo.ecm.core.api.DocumentModelList dml = session
                .query(String.format("select * from Document where ecm:primaryType = 'Case' and case:SSN = '%s'", node.getText()));
            return dml.get(0).getPathAsString();
    }]]></parent>
		</docConfig>
		<!-- Create address history -->
		<!-- Will append to existing Applicant doc model -->
		<docConfig updateExistingDocuments="true"
			tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/ResidenceHistory/Residencies/Residency">
			<docType>Application</docType>
			<!-- Externally assigned naming -->
			<!-- Return Application document for append -->
			<name><![CDATA[ #{
			org.dom4j.Node node = xml.selectSingleNode('//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/IdentifyingInformation');
			org.nuxeo.ecm.core.api.DocumentModel dm = map.get(node);
			return dm.getName();
    }]]></name>
            <parent><![CDATA[ #{
			org.dom4j.Node node = xml.selectSingleNode('//XMP/Request/Applicant/SSN');
			org.nuxeo.ecm.core.api.DocumentModelList dml = session
                .query(String.format("select * from Document where ecm:primaryType = 'Case' and case:SSN = '%s'", node.getText()));
            return dml.get(0).getPathAsString();
    }]]></parent>
		</docConfig>
		<!-- Create interview for current residency location -->
		<docConfig
			tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/ResidenceHistory/Residencies/Residency[DateRange/To/Date/@Type='Present']/Verifier">
			<docType>Interview</docType>
			<!-- Externally assigned naming -->
			<parent><![CDATA[ #{
			org.dom4j.Node node = xml.selectSingleNode('//XMP/Request/Applicant/SSN');
			org.nuxeo.ecm.core.api.DocumentModelList dml = session
                .query(String.format("select * from Document where ecm:primaryType = 'Case' and case:SSN = '%s'", node.getText()));
            return dml.get(0).getPathAsString();
    }]]></parent>
		</docConfig>
	</extension>
	<extension
		target="org.nuxeo.ecm.platform.importer.xml.parser.XMLImporterComponent"
		point="attributeMapping">
		<!-- Application Document -->
		<attributeConfig tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/IdentifyingInformation"
			docProperty="file:content">
			<mapping documentProperty="filename">#{return source.getName();}</mapping>
			<mapping documentProperty="content">#{return source.getName();}</mapping>
		</attributeConfig>
		<attributeConfig tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/IdentifyingInformation"
			docProperty="uid:uid" xmlPath="#{ return xml.selectSingleNode('//XMP/Request/Applicant/@UserId').getText();}" />
		<attributeConfig tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/IdentifyingInformation/SSN"
			docProperty="application:SSN" xmlPath="#{ return xml.selectSingleNode('//XMP/Request/Applicant/SSN').getText();}" />
		<attributeConfig tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/IdentifyingInformation/Birth"
			docProperty="pinfo:citizenship" xmlPath="#{ return xml.selectSingleNode('/XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/Citizenship/Status').getText();}" />
	    <attributeConfig tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/IdentifyingInformation/SSN"
			docProperty="pinfo:SSN" xmlPath="#{ return xml.selectSingleNode('//XMP/Request/Applicant/SSN').getText();}" />
	    <attributeConfig tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/IdentifyingInformation/Sex"
			docProperty="pinfo:sex" xmlPath="text()" />
		<attributeConfig tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/IdentifyingInformation/Birth/Date"
			docProperty="pinfo:dateOfBirth" xmlPath="#{
			     org.dom4j.Node year = currentElement.selectSingleNode('Year');
			     org.dom4j.Node mon = currentElement.selectSingleNode('Month');
			     org.dom4j.Node day = currentElement.selectSingleNode('Day');
			     if (year == null || mon == null || day == null) {
			         return null;
			     }
			     String date = year.getText() + '-' + mon.getText() + '-' + day.getText();
			     return Fn.parseDate(date, 'yyyy-MM-dd');
			}" />
		<attributeConfig tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/IdentifyingInformation/Birth/Place"
			docProperty="pinfo:placeOfBirth" xmlPath="#{ 
			     org.dom4j.Node city = currentElement.selectSingleNode('City');
			     org.dom4j.Node county = currentElement.selectSingleNode('County');
			     org.dom4j.Node state = currentElement.selectSingleNode('State');
			     org.dom4j.Node country = currentElement.selectSingleNode('Country');
			return city != null ? (city.getText() + ', ') : ''
			     + county != null ? (county.getText() + ', ') : ''
			     + state != null ? (state.getText() + ', ') : ''
			     + country != null ? (country.getText()) : '';
			}" />
		<attributeConfig tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/IdentifyingInformation/OtherNamesUsed/OtherNames/OtherName/LegalName"
			docProperty="pinfo:otherNames" xmlPath="#{
			     org.dom4j.Node first = currentElement.selectSingleNode('First');
			     org.dom4j.Node mid = currentElement.selectSingleNode('Middle');
			     org.dom4j.Node last = currentElement.selectSingleNode('Last');
			return first != null ? (first.getText() + ' ') : ''
			     + mid != null ? (mid.getText() + ' ') : ''
			     + last != null ? (last.getText() + ' ') : '';
			}" />
		<!-- SF86 Attachments -->
		<attributeConfig tagName="//XMP/Request/Attachments/Attachment"
			docProperty="dc:title" xmlPath="@OriginalLocalFileName" />
		<attributeConfig tagName="//XMP/Request/Attachments/Attachment"
			docProperty="caat:typeOfAttachment" xmlPath="@DocumentType" />
		<attributeConfig tagName="//XMP/Request/Attachments/Attachment"
			docProperty="file:content">
			<mapping documentProperty="filename">@OriginalLocalFileName</mapping>
			<mapping documentProperty="content">@FileNameWhenExported</mapping>
		</attributeConfig>
		<!-- Interview Document -->
		<attributeConfig
			tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/PersonalReferences/References/Reference/LegalName/Last"
			docProperty="interview:lastName" xmlPath="text()" />
		<attributeConfig
			tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/PersonalReferences/References/Reference/LegalName/First"
			docProperty="interview:firstName" xmlPath="text()" />
		<attributeConfig
			tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/PersonalReferences/References/Reference/Address/ZipCode"
			docProperty="interview:zipcode" xmlPath="text()" />
		<attributeConfig
			tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/PersonalReferences/References/Reference/Telephone/Home/Number"
			docProperty="interview:phone" xmlPath="text()" />
		<attributeConfig
			tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/PersonalReferences/References/Reference/Telephone/Mobile/Number"
			docProperty="interview:phone" xmlPath="text()" />
		<attributeConfig
			tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/PersonalReferences/References/Reference/Email"
			docProperty="interview:email" xmlPath="text()" />
		<!-- Address History -->
		<attributeConfig
		    tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/ResidenceHistory/Residencies/Residency/Address"
		    docProperty="pinfo:address">
		    <mapping documentProperty="city">City/text()</mapping>
		    <mapping documentProperty="state">State/text()</mapping>
		    <mapping documentProperty="street">Street/text()</mapping>
		    <mapping documentProperty="zip">ZipCode/text()</mapping>
		    <mapping documentProperty="current">#{ return currentElement.selectSingleNode("../DateRange/To/Date[@Type='Present']") != null; }</mapping>
		</attributeConfig>
		<!-- Applicant Interview (current location) -->
		<attributeConfig
			tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/ResidenceHistory/Residencies/Residency[DateRange/To/Date/@Type='Present']/Verifier/LegalName/Last"
			docProperty="interview:lastName" xmlPath="text()" />
		<attributeConfig
			tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/ResidenceHistory/Residencies/Residency[DateRange/To/Date/@Type='Present']/Verifier/LegalName/First"
			docProperty="interview:firstName" xmlPath="text()" />
		<attributeConfig
			tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/ResidenceHistory/Residencies/Residency[DateRange/To/Date/@Type='Present']/Verifier/Address/ZipCode"
			docProperty="interview:zipcode" xmlPath="text()" />
		<attributeConfig
			tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/ResidenceHistory/Residencies/Residency[DateRange/To/Date/@Type='Present']/Verifier/Telephone/Day/Number"
			docProperty="interview:phone" xmlPath="text()" />
		<attributeConfig
			tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/ResidenceHistory/Residencies/Residency[DateRange/To/Date/@Type='Present']/Verifier/Telephone/Evening/Number"
			docProperty="interview:phone" xmlPath="text()" />
		<attributeConfig
			tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/ResidenceHistory/Residencies/Residency[DateRange/To/Date/@Type='Present']/Verifier/Telephone/Mobile/Number"
			docProperty="interview:phone" xmlPath="text()" />
		<attributeConfig
			tagName="//XMP/SubmittedRequestInfo/RequestInfo/Request/Responses/Pooled/ResidenceHistory/Residencies/Residency[DateRange/To/Date/@Type='Present']/Verifier/Email"
			docProperty="interview:email" xmlPath="text()" />
	</extension>
</component>
